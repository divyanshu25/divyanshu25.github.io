<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Home</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 14 Sep 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Deploying Flask Application using Apache with mod_wsgi</title>
      <link>/post/flask-apache/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/flask-apache/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;We have written this blog to help developers deploy &lt;code&gt;flask&lt;/code&gt; application with &lt;code&gt;apache&lt;/code&gt; and &lt;code&gt;mod_wsgi&lt;/code&gt; in production.
We read through a lot of articles and found out the steps we layout below are the simplest way to deploy.
Also, the biggest caveat to deploying in production is version mismatches, so we are going to be building things from source rather than using apt-get to install packages.
So let&amp;rsquo;s get started.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;orgbba5361&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;build-and-install-custom-version-of-python&#34;&gt;Build and install custom version of python&lt;/h1&gt;
&lt;p&gt;We used python &lt;code&gt;3.7.5&lt;/code&gt; for a current project and here is how you can deploy python from source. Make sure you remove any other python version you might have on your machine.
To remove any existing python installations.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get purge python&amp;lt;version&amp;gt;
sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- Refer link for compilation: [Link](https://linuxize.com/post/how-to-install-python-3-7-on-ubuntu-18-04/)
--&gt;
&lt;p&gt;&lt;a id=&#34;orgb970147&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-install-dependencies-and-packages&#34;&gt;1. Install Dependencies and packages.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev wget libbz2-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-download-source&#34;&gt;2. Download source&lt;/h3&gt;
&lt;p&gt;Now to fetch tar file for a specific python version use.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can check out other python versions here: 
&lt;a href=&#34;https://www.python.org/downloads/source/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;orge79fbcd&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-compile-python&#34;&gt;3. Compile python&lt;/h3&gt;
&lt;p&gt;Now to compile the downloaded tar.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar -xf Python-3.7.5.tgz
cd Python-3.7.5
./configure --enable-shared --prefix=/usr/ 
make -j4
sudo make install 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Argument in make -j&lt;code&gt;N&lt;/code&gt; is the number of processors if you are not sure about number of processors in the machine. You can use
&lt;code&gt;nproc&lt;/code&gt; to get it.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;org895c7b7&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;build-and-install-custom-version-of-wsgi-mod&#34;&gt;Build and install custom version of wsgi mod&lt;/h1&gt;
&lt;p&gt;Ok, now we move on to getting mod_wsgi installation right. Before we get into steps I would like you to read this

&lt;a href=&#34;https://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;.
which essentially says this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The problem in trying to force mod_wsgi to use a different Python installation than what it was compiled for, 
even where it is the same Python version, is that the Python installation may itself not have been 
compiled with the same options. This is especially a problem when it comes to issues around how Python stores 
Unicode characters in memory. 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So to avoid this problem we are going to build mod_wsgi from the source and compile it with python we just installed in the last step.&lt;/p&gt;
&lt;h3 id=&#34;1-compile-wsgi-mod&#34;&gt;1. Compile wsgi-mod&lt;/h3&gt;
&lt;p&gt;Download source code from: 
&lt;a href=&#34;https://github.com/GrahamDumpleton/mod_wsgi/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github releases&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar xvfz mod_wsgi-X.Y.tar.gz
cd mod_wsgi-X.Y
sudo apt-get install apache2-dev
./configure --with-python=/usr/bin/python
make -j4
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- Refer link for compilation: [wsgi](https://modwsgi.readthedocs.io/en/develop/user-guides/quick-installation-guide.html)
--&gt;
&lt;h1 id=&#34;configure-apache&#34;&gt;Configure Apache&lt;/h1&gt;
&lt;p&gt;Ok, now we move on to building apache2.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;orgd89c968&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-install-apache2&#34;&gt;1. Install apache2&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id=&#34;orga12ca17&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-configure-wsgi-module&#34;&gt;2. Configure Wsgi module&lt;/h3&gt;
&lt;p&gt;Now we need to configure apache with the mod_wsgi we complied and installed in the last step.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Create a file: `/etc/apache2/mods-available/wsgi.load`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following line to the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we need to enable mod_wsgi and restart apache2.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo a2enmod wsgi
sudo systemctl restart apache2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This completes the installation of Apache2 and mod_wsgi, all complied with python&lt;code&gt;3.7.5&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&#34;deploying-flask-application&#34;&gt;Deploying Flask Application&lt;/h1&gt;
&lt;h3 id=&#34;1-create-wsgi-file&#34;&gt;1. Create .wsgi file&lt;/h3&gt;
&lt;p&gt;Now to deploy the flask application copy your code directory to
&lt;code&gt;/var/www/&lt;/code&gt; directory and create &lt;code&gt;&amp;lt;your_application&amp;gt;&lt;/code&gt;.wsgi file and add the following lines.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import sys
sys.path.insert(0, &#39;/var/www/&amp;lt;your_application_dir&amp;gt;&#39;)
from &amp;lt;your_application&amp;gt; import &amp;lt;flask_app&amp;gt; as application
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-create-virtualenv&#34;&gt;2. Create virtualenv&lt;/h3&gt;
&lt;p&gt;Its generally best practice to create a virtualenv for your application and install all the dependencies, to avoid clashing package versions that
other application might be using. To create a virtualenv:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /var/www/
virtualenv -p python3 &amp;lt;venv_name&amp;gt;
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that you will need a &lt;code&gt;requiremnts.txt&lt;/code&gt; file. To create one you can do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-create-configuration-file-in-apache&#34;&gt;3. Create Configuration file in Apache&lt;/h3&gt;
&lt;p&gt;Now we need to create a configuration file to tell apache from where to load your application.
In &lt;code&gt;/etc/apache2/sites-available&lt;/code&gt; create &lt;code&gt;&amp;lt;your_application&amp;gt;.conf&lt;/code&gt; file and add the following lines.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;VirtualHost *:80&amp;gt;
       ServerName &amp;lt;Server_name&amp;gt;
       WSGIDaemonProcess &amp;lt;your_application&amp;gt; user=&amp;lt;user&amp;gt; group=&amp;lt;group&amp;gt; threads=5 \
       python-home=/var/www/&amp;lt;venv_name&amp;gt;
   
       WSGIProcessGroup &amp;lt;your_application&amp;gt;
       WSGIApplicationGroup %{GLOBAL}
       WSGIScriptAlias / /var/www/&amp;lt;your_application_dir&amp;gt;/&amp;lt;your_application&amp;gt;.wsgi
       &amp;lt;Directory /var/www/&amp;lt;your_application_dir&amp;gt;/&amp;lt;your_application&amp;gt;/&amp;gt;
           Order allow,deny
           Allow from all
           Require all granted
       &amp;lt;/Directory&amp;gt;
       Alias /static /var/www/&amp;lt;your_application_dir&amp;gt;/&amp;lt;your_application&amp;gt;/static
       &amp;lt;Directory /var/www/&amp;lt;your_application_dir&amp;gt;/&amp;lt;your_application&amp;gt;/static/&amp;gt;
           Order allow,deny
           Allow from all
        &amp;lt;/Directory&amp;gt;
        ErrorLog /var/www/&amp;lt;your_application_dir&amp;gt;/error.log
        LogLevel debug
        CustomLog /var/www/&amp;lt;your_application_dir&amp;gt;/access.log combined
   &amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can remove that logging commands if you don&amp;rsquo;t wish to see logs.&lt;/p&gt;
&lt;h3 id=&#34;4-enable-application&#34;&gt;4. Enable application&lt;/h3&gt;
&lt;p&gt;Now we need to tell apache to enable our application and load the configuration file we just created.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo a2ensite &amp;lt;your_application&amp;gt;
sudo systemctl restart apache2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s it. Your website is up and running on the public IP for the server.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Engineering High-Throughput, Low-Latency Machine Learning Services.</title>
      <link>/post/urp/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/post/urp/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;#title: &amp;lsquo;Engineering High-Throughput, Low-Latency Machine Learning Services.&amp;rsquo;
#subtitle: &amp;lsquo;Serve your Machine Learning Models in Real-Time.&amp;rsquo;
#&lt;!-- summary: Create a beautifully simple website in under 10 minutes. --&gt;
#authors:
#- admin
#- Shirsh Bansal
#tags:
#- Distributed Computing
#- Machine Learning Systems#&lt;/p&gt;
&lt;p&gt;#date: &amp;ldquo;2016-04-20T00:00:00Z&amp;rdquo;
#lastmod: &amp;ldquo;2019-04-17T00:00:00Z&amp;rdquo;
#featured: false
#draft: false#&lt;/p&gt;
&lt;h2 id=&#34;featured-image&#34;&gt;Featured image&lt;/h2&gt;
&lt;h2 id=&#34;to-use-add-an-image-named-featuredjpgpng-to-your-pages-folder&#34;&gt;To use, add an image named &lt;code&gt;featured.jpg/png&lt;/code&gt; to your page&amp;rsquo;s folder.&lt;/h2&gt;
&lt;h2 id=&#34;placement-options-1--full-column-width-2--out-set-3--screen-width&#34;&gt;Placement options: 1 = Full column width, 2 = Out-set, 3 = Screen-width&lt;/h2&gt;
&lt;h2 id=&#34;focal-point-options-smart-center-topleft-top-topright-left-right-bottomleft-bottom-bottomright&#34;&gt;Focal point options: Smart, Center, TopLeft, Top, TopRight, Left, Right, BottomLeft, Bottom, BottomRight&lt;/h2&gt;
&lt;p&gt;#image:&lt;/p&gt;
&lt;h1 id=&#34;placement-2&#34;&gt;placement: 2&lt;/h1&gt;
&lt;h1 id=&#34;caption-image-credit-unsplashhttpsunsplashcomphotoscpkojocxduy&#34;&gt;caption: &amp;lsquo;Image credit: 
&lt;a href=&#34;https://unsplash.com/photos/CpkOjOcXdUY&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Unsplash&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;&lt;/h1&gt;
&lt;h1 id=&#34;focal_point-&#34;&gt;focal_point: &amp;quot;&amp;rdquo;&lt;/h1&gt;
&lt;h1 id=&#34;preview_only-false&#34;&gt;preview_only: false#&lt;/h1&gt;
&lt;h2 id=&#34;projects-optional&#34;&gt;Projects (optional).&lt;/h2&gt;
&lt;h2 id=&#34;associate-this-post-with-one-or-more-of-your-projects&#34;&gt;Associate this post with one or more of your projects.&lt;/h2&gt;
&lt;h2 id=&#34;simply-enter-your-projects-folder-or-file-name-without-extension&#34;&gt;Simply enter your project&amp;rsquo;s folder or file name without extension.&lt;/h2&gt;
&lt;h2 id=&#34;eg-projects--internal-project-references-contentprojectdeep-learningindexmd&#34;&gt;E.g. &lt;code&gt;projects = [&amp;quot;internal-project&amp;quot;]&lt;/code&gt; references &lt;code&gt;content/project/deep-learning/index.md&lt;/code&gt;.&lt;/h2&gt;
&lt;h2 id=&#34;otherwise-set-projects--&#34;&gt;Otherwise, set &lt;code&gt;projects = []&lt;/code&gt;.&lt;/h2&gt;
&lt;p&gt;#projects: []
#&amp;mdash;
#external_link: &lt;a href=&#34;https://medium.com/adobetech/engineering-high-throughput-low-latency-machine-learning-services-7d45edac0271&#34;&gt;https://medium.com/adobetech/engineering-high-throughput-low-latency-machine-learning-services-7d45edac0271&lt;/a&gt;&lt;/p&gt;
&lt;!-- The following blog has been moved to Medium under **Adobe Tech Blogs**. 

Please visit the following [link.](https://medium.com/adobetech/engineering-high-throughput-low-latency-machine-learning-services-7d45edac0271) --&gt;
&lt;!-- **Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 _widgets_, _themes_, and _language packs_ included!**

[Check out the latest **demo**](https://academic-demo.netlify.com/) of what you&#39;ll get in less than 10 minutes, or [view the **showcase**](https://sourcethemes.com/academic/#expo) of personal, project, and business sites.

- 👉 [**Get Started**](#install)
- 📚 [View the **documentation**](https://sourcethemes.com/academic/docs/)
- 💬 [**Ask a question** on the forum](https://discourse.gohugo.io)
- 👥 [Chat with the **community**](https://spectrum.chat/academic)
- 🐦 Twitter: [@source_themes](https://twitter.com/source_themes) [@GeorgeCushen](https://twitter.com/GeorgeCushen) [#MadeWithAcademic](https://twitter.com/search?q=%23MadeWithAcademic&amp;src=typd)
- 💡 [Request a **feature** or report a **bug**](https://github.com/gcushen/hugo-academic/issues)
- ⬆️ **Updating?** View the [Update Guide](https://sourcethemes.com/academic/docs/update/) and [Release Notes](https://sourcethemes.com/academic/updates/)
- ❤️ **Support development** of Academic:
  - ☕️ [**Donate a coffee**](https://paypal.me/cushen)
  - 💵 [Become a backer on **Patreon**](https://www.patreon.com/cushen)
  - 🖼️ [Decorate your laptop or journal with an Academic **sticker**](https://www.redbubble.com/people/neutreno/works/34387919-academic)
  - 👕 [Wear the **T-shirt**](https://academic.threadless.com/)
  - 👩‍💻 [**Contribute**](https://sourcethemes.com/academic/docs/contribute/)

















&lt;figure id=&#34;figure-academic-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; data-caption=&#34;Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34;&gt;


  &lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.
  &lt;/figcaption&gt;


&lt;/figure&gt;


**Key features:**

- **Page builder** - Create *anything* with [**widgets**](https://sourcethemes.com/academic/docs/page-builder/) and [**elements**](https://sourcethemes.com/academic/docs/writing-markdown-latex/)
- **Edit any type of content** - Blog posts, publications, talks, slides, projects, and more!
- **Create content** in [**Markdown**](https://sourcethemes.com/academic/docs/writing-markdown-latex/), [**Jupyter**](https://sourcethemes.com/academic/docs/jupyter/), or [**RStudio**](https://sourcethemes.com/academic/docs/install/#install-with-rstudio)
- **Plugin System** - Fully customizable [**color** and **font themes**](https://sourcethemes.com/academic/themes/)
- **Display Code and Math** - Code highlighting and [LaTeX math](https://en.wikibooks.org/wiki/LaTeX/Mathematics) supported
- **Integrations** - [Google Analytics](https://analytics.google.com), [Disqus commenting](https://disqus.com), Maps, Contact Forms, and more!
- **Beautiful Site** - Simple and refreshing one page design
- **Industry-Leading SEO** - Help get your website found on search engines and social media
- **Media Galleries** - Display your images and videos with captions in a customizable gallery
- **Mobile Friendly** - Look amazing on every screen with a mobile friendly version of your site
- **Multi-language** - 15+ language packs including English, 中文, and Português
- **Multi-user** - Each author gets their own profile page
- **Privacy Pack** - Assists with GDPR
- **Stand Out** - Bring your site to life with animation, parallax backgrounds, and scroll effects
- **One-Click Deployment** - No servers. No databases. Only files.

## Themes

Academic comes with **automatic day (light) and night (dark) mode** built-in. Alternatively, visitors can  choose their preferred mode - click the sun/moon icon in the top right of the [Demo](https://academic-demo.netlify.com/) to see it in action! Day/night mode can also be disabled by the site admin in `params.toml`.

[Choose a stunning **theme** and **font**](https://sourcethemes.com/academic/themes/) for your site. Themes are fully [customizable](https://sourcethemes.com/academic/docs/customization/#custom-theme).

## Ecosystem

* **[Academic Admin](https://github.com/sourcethemes/academic-admin):** An admin tool to import publications from BibTeX or import assets for an offline site
* **[Academic Scripts](https://github.com/sourcethemes/academic-scripts):** Scripts to help migrate content to new versions of Academic

## Install

You can choose from one of the following four methods to install:

* [**one-click install using your web browser (recommended)**](https://sourcethemes.com/academic/docs/install/#install-with-web-browser)
* [install on your computer using **Git** with the Command Prompt/Terminal app](https://sourcethemes.com/academic/docs/install/#install-with-git)
* [install on your computer by downloading the **ZIP files**](https://sourcethemes.com/academic/docs/install/#install-with-zip)
* [install on your computer with **RStudio**](https://sourcethemes.com/academic/docs/install/#install-with-rstudio)

Then [personalize and deploy your new site](https://sourcethemes.com/academic/docs/get-started/).

## Updating

[View the Update Guide](https://sourcethemes.com/academic/docs/update/).

Feel free to *star* the project on [Github](https://github.com/gcushen/hugo-academic/) to help keep track of [updates](https://sourcethemes.com/academic/updates).

## License

Copyright 2016-present [George Cushen](https://georgecushen.com).

Released under the [MIT](https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md) license.
 --&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Hive-JDBC Storage Handler</title>
      <link>/post/hive-jdbc/</link>
      <pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate>
      <guid>/post/hive-jdbc/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
